name: Build, test & measure

on:
  push:
    branches:
      - develop
      # Include all release branches.
      - '[0-9]+.[0-9]+'
  pull_request:
    # Run workflow whenever a PR is opened, updated (synchronized), or marked ready for review.
    types: [opened, synchronize, ready_for_review]

# Cancel previous workflow run groups that have not completed.
concurrency:
  # Group workflow runs by workflow name, along with the head branch ref of the pull request
  # or otherwise the branch or tag ref.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  pre-run:
    name: 'Pre run'
    runs-on: ubuntu-latest
    outputs:
      changed-file-count: ${{ steps.determine-file-counts.outputs.count }}
      changed-php-count: ${{ steps.determine-file-counts.outputs.php-count }}
      changed-css-count: ${{ steps.determine-file-counts.outputs.css-count }}
      changed-js-count: ${{ steps.determine-file-counts.outputs.js-count }}
      changed-gha-workflow-count: ${{ steps.determine-file-counts.outputs.gha-workflow-count }}
    steps:
      - name: Checkout including last 2 commits
        # Fetch last 2 commits if it's not a PR, so that we can determine the list of modified files.
        if: ${{ github.base_ref == null }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Checkout
        # Do usual checkout if it's a PR.
        if: ${{ github.base_ref != null }}
        uses: actions/checkout@v3

      - name: Fetch base branch
        # Only fetch base ref if it's a PR.
        if: ${{ github.base_ref != null }}
        run: git fetch --depth=1 --no-tags origin ${{ github.base_ref }}

      - name: Determine modified files for PR
        if: ${{ github.base_ref != null }}
        run: echo "MODIFIED_FILES=$(git diff --name-only FETCH_HEAD HEAD | base64 -w 0)" >> $GITHUB_ENV

      - name: Determine modified files for commit
        if: ${{ github.base_ref == null }}
        run: echo "MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD | base64 -w 0)" >> $GITHUB_ENV

      - id: determine-file-counts
        name: Determine if modified files should make the workflow run continue
        run: |
          MODIFIED_FILES=$(echo "$MODIFIED_FILES" | base64 -d)
          echo -e "Modified files:\n$MODIFIED_FILES\n"

          FILE_COUNT=$(php -f bin/determine-modified-files-count.php "$IGNORE_PATH_REGEX" "$MODIFIED_FILES" --invert)
          PHP_FILE_COUNT=$(php -f bin/determine-modified-files-count.php ".+\.php|composer\.(json|lock)|phpstan\.neon\.dist" "$MODIFIED_FILES")
          CSS_FILE_COUNT=$(php -f bin/determine-modified-files-count.php ".+\.s?css|package\.json|package-lock\.json" "$MODIFIED_FILES")
          JS_FILE_COUNT=$(php -f bin/determine-modified-files-count.php ".+\.(js|snap)|package\.json|package-lock\.json" "$MODIFIED_FILES")
          GHA_WORKFLOW_COUNT=$(php -f bin/determine-modified-files-count.php "(\.github\/workflows\/.+\.yml)" "$MODIFIED_FILES")

          echo "Changed file count: $FILE_COUNT"
          echo "Changed PHP file count: $PHP_FILE_COUNT"
          echo "Changed CSS file count: $CSS_FILE_COUNT"
          echo "Changed JS file count: $JS_FILE_COUNT"
          echo "Changed GHA workflow file count: $GHA_WORKFLOW_COUNT"

          echo "::set-output name=count::$FILE_COUNT"
          echo "::set-output name=php-count::$PHP_FILE_COUNT"
          echo "::set-output name=css-count::$CSS_FILE_COUNT"
          echo "::set-output name=js-count::$JS_FILE_COUNT"
          echo "::set-output name=gha-workflow-count::$GHA_WORKFLOW_COUNT"
        env:
          # Ignore Paths:
          # - .github/
          # - !.github/workflows
          # - .wordpress-org/
          # - docs/
          IGNORE_PATH_REGEX: \.github\/(?!workflows)|\.wordpress-org\/|docs\/

  #-----------------------------------------------------------------------------------------------------------------------

  # Adapted from workflow for running PHP unit tests on google/web-stories-wp.
  # See https://github.com/google/web-stories-wp/blob/cb2ebada48039171e25c279bdb27d3712dd70b22/.github/workflows/continuous-integration-unit-php.yml
  unit-test-php:
    name: "Unit test${{ matrix.coverage && ' (with coverage)' || '' }}: PHP ${{ matrix.php }}, WP ${{ matrix.wp }}"
    runs-on: ubuntu-latest
    needs: pre-run
    env:
      WP_CORE_DIR: /tmp/wordpress
    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    continue-on-error: ${{ matrix.experimental == true }}
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0']
        wp: ['latest']
        external-http: [false]
        install-pwa-plugin: [true]
        coverage: [false]
        include:
          - php: '8.0'
            wp: 'trunk'
            experimental: true

#          - php: '8.0'
#            wp: 'latest'
#            external-http: true

          # PHP 8.0 cannot be used as yet due to the earliest compatible PHPUnit (v9) being unable to run due to the
          # WP test suite enforcing PHPUnit 7 or earlier.
          - php: '7.4'
            wp: 'latest'
            coverage: true

#          - php: '7.2'
#            wp: 'latest'

#          - php: '7.1'
#            wp: 'latest'

#          - php: '7.0'
#            wp: '5.1'

#          - php: '5.6'
#            wp: '5.0'

#          - php: '5.6'
#            wp: '4.9'
#            external-http: true
#            install-pwa-plugin: false

    steps:
      # Note: The repeated `needs.pre-run.outputs.changed-php-count > 0` checks would be avoided if a step could short-
      # circuit per <https://github.com/actions/runner/issues/662>. The reason why the if statement can't be put on the
      # job as a whole is because the name is variable based on the matrix, and if the condition is not met then the
      # name won't be interpolated in order to match the required jobs set up in branch protection.
      - name: Notice
        if: needs.pre-run.outputs.changed-php-count == 0
        run: echo "No PHP files were changed so no PHP unit tests will run"

      - name: Checkout
        if: needs.pre-run.outputs.changed-php-count > 0
        uses: actions/checkout@v3

      - name: Setup PHP
        if: needs.pre-run.outputs.changed-php-count > 0
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, date, dom, gd, iconv, json, libxml, mysql, spl
          coverage: ${{ matrix.coverage && 'pcov' || 'none' }}
          ini-values: pcov.directory=.

      - name: Shutdown default MySQL service
        if: needs.pre-run.outputs.changed-php-count > 0
        run: sudo service mysql stop

      - name: Verify MariaDB connection
        if: needs.pre-run.outputs.changed-php-count > 0
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"${{ job.services.mysql.ports[3306] }}" --silent; do
            sleep 1
          done

      - name: Setup Node
        if: needs.pre-run.outputs.changed-php-count > 0
        uses: actions/setup-node@v3.0.0
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Get Composer Cache Directory
        if: needs.pre-run.outputs.changed-php-count > 0
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Configure Composer cache
        if: needs.pre-run.outputs.changed-php-count > 0
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: needs.pre-run.outputs.changed-php-count > 0
        run: |
          # phpdocumentor/reflection has to be removed as it makes use of an outdated dependency.
          composer remove --dev phpdocumentor/reflection
          composer install --prefer-dist --ignore-platform-reqs --no-progress --no-interaction

      - name: Install Node dependencies
        if: needs.pre-run.outputs.changed-php-count > 0
        run: npm ci
        env:
          CI: true

      - name: Build plugin
        if: needs.pre-run.outputs.changed-php-count > 0
        run: npm run build:js

      # Scan the logs for failing tests and surface that information by creating annotations and log file decorations.
      - name: Setup problem matcher to provide annotations for PHPUnit
        if: needs.pre-run.outputs.changed-php-count > 0
        # The JSON file is provided by the `shivammathur/setup-php` action. See https://github.com/shivammathur/setup-php#problem-matchers.
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install WP tests
        if: needs.pre-run.outputs.changed-php-count > 0
        run: bash bin/ci/install-wp-tests.sh wordpress_test root '' 127.0.0.1:${{ job.services.mysql.ports['3306'] }} ${{ matrix.wp }} true

      - name: Post install of WP tests
        if: needs.pre-run.outputs.changed-php-count > 0
        run: bash bin/ci/after-wp-install.sh ${{ matrix.wp }} ${{ matrix.install-pwa-plugin == true }}

      - name: Copy plugin to WP plugins directory
        if: needs.pre-run.outputs.changed-php-count > 0
        run: cp -r "$PWD" "$WP_CORE_DIR/src/wp-content/plugins/amp"

      - name: Setup PCOV
        if: ${{ matrix.coverage == true }}
        run: |
          composer require --dev --ignore-platform-reqs pcov/clobber
          vendor/bin/pcov clobber

      - name: Run tests
        if: ${{ matrix.coverage == false && needs.pre-run.outputs.changed-php-count > 0 }}
        run: vendor/bin/phpunit --verbose
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib

      - name: Run tests with coverage
        if: ${{ matrix.coverage == true && needs.pre-run.outputs.changed-php-count > 0 }}
        run: vendor/bin/phpunit --verbose --coverage-clover ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp/build/logs/clover.xml
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib

      - name: Run external HTTP tests
        if: ${{ matrix.external-http == true && needs.pre-run.outputs.changed-php-count > 0 }}
        run: vendor/bin/phpunit --testsuite external-http
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib

      - name: Upload code coverage report
        if: ${{ matrix.coverage == true && needs.pre-run.outputs.changed-php-count > 0 }}
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/amp/build/logs/clover.xml
          flags: php,unit
          fail_ci_if_error: true

